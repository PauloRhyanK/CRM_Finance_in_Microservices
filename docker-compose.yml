# /docker-compose.yml
version: '3.8'

services:
  # --- SERVIÇO DE AUTENTICAÇÃO ---
  auth-service:
    build:
      context: .services/auth-service  
    container_name: auth_service
    restart: unless-stopped
    ports:
      - "5001:5000" 
    env_file: .env 
    environment:
      - AUTH_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@auth-db:5432/${AUTH_DB_NAME}
    depends_on:
      auth-db:
        condition: service_healthy
    networks:
      - crm_network

  # --- BANCO DE DADOS DE AUTENTICAÇÃO ---
  auth-db:
    image: postgres:16-alpine
    container_name: auth_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${AUTH_DB_NAME}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=pt_BR.UTF-8"
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${AUTH_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crm_network


# --- SERVIÇO DE CLIENTES ---
  customer-service:
    build:
      context: ./customer-service
    container_name: customer_service
    restart: unless-stopped
    ports:
      - "5002:5000" # Mapeia para a porta 5002 na sua máquina
    env_file: .env
    environment:
      - CUSTOMER_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@customer-db:5432/${CUSTOMER_DB_NAME}
    depends_on:
      customer-db:
        condition: service_healthy
    networks:
      - crm_network

  # --- BANCO DE DADOS DE CLIENTES ---
  customer-db:
    image: postgres:16-alpine
    container_name: customer_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${CUSTOMER_DB_NAME}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=pt_BR.UTF-8"
    volumes:
      - customer_postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432" # Mapeia para a porta 5434 na sua máquina
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${CUSTOMER_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crm_network
# --- SERVIÇO DE PRODUTOS ---
  product-service:
    build:
      context: ./product-service
    container_name: product_service
    restart: unless-stopped
    ports:
      - "5003:5000" # Mapeia para a porta 5003 na sua máquina
    env_file: .env
    environment:
      - PRODUCT_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@product-db:5432/${PRODUCT_DB_NAME}
    depends_on:
      product-db:
        condition: service_healthy
    networks:
      - crm_network

  # --- BANCO DE DADOS DE PRODUTOS ---
  product-db:
    image: postgres:16-alpine
    container_name: product_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${PRODUCT_DB_NAME}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=pt_BR.UTF-8"
    volumes:
      - product_postgres_data:/var/lib/postgresql/data
    ports:
      - "5435:5432" # Mapeia para a porta 5435 na sua máquina
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${PRODUCT_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crm_network

volumes:
  auth_postgres_data:
  customer_postgres_data:
  product_postgres_data: 

networks:
  crm_network:
    driver: bridge